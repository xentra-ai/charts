---
apiVersion: v1
# define a resource for volume chain
kind: PersistentVolumeClaim
metadata:
  # Name the volume chain
  name: db-persistent-volume-claim
  namespace: kube-guardian
spec:
  storageClassName: standard
  accessModes:
    # Allow ReadWrite to multiple pods
    - ReadWriteOnce
  # PVC requesting resources
  resources:
    requests:
      # the PVC storage
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresdb # Sets service name
  namespace: kube-guardian
  labels:
    app: postgresdb # Labels and Selectors
spec:
  type: NodePort # Sets service type
  ports:
    - port: 5432 # Sets port to run the postgres application
  selector:
    app: postgresdb
---
# Kubernetes API version
# TODO statefulset
apiVersion: apps/v1
# Deployment object
kind: Deployment
metadata:
  # The name of the Deployment
  name: {{ .Values.database.name }}
spec:
  # Replicas for this Deployment
  replicas: 1
  selector:
    # labels the pods
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        # The label the pods created from the pod template should have
        app: postgresdb
    spec:
      containers:
        # The container name to execute pods
        - name: postgresdb
          # pull postgresimage from docker hub
          image: postgres
          ports:
            # Assign ports to expose container
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: rust
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_DB
              value: kube-guardian
          volumeMounts:
            # The volume mounts  for the container
            - mountPath: /var/lib/postgres/data
              name: db-data
      # Volumes attached to the pod
      volumes:
        - name: db-data
          persistentVolumeClaim:
            # reference the PersistentVolumeClaim
            claimName: db-persistent-volume-claim
