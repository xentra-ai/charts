apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kube-guardian.name" . }}-controller
  labels:
    {{- include "kube-guardian.labels" . | nindent 4 }}
  annotations:
    {{- include "kube-guardian.annotations" . | nindent 4 -}}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-guardian
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-guardian
    spec:
      hostNetwork: true
      {{- if .Values.controller.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.controller.imagePullSecrets | indent 8 }}
      {{- end }}
      initContainers:
      - name: wait-for-api
        image: busybox
        command: ["sh", "-c", "until wget -qO- http://{{ .Values.broker.service.name }}.{{ include "kube-guardian.namespace" . }}.svc.cluster.local:{{ .Values.broker.container.port }}/health; do sleep 5; done"]
      containers:
      - name: controller
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        args:
          - "calico"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
        env:
        - name: RUST_LOG
          value: INFO
        - name: CURRENT_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: API_ENDPOINT
          value: "http://{{ .Values.broker.service.name }}.{{ include "kube-guardian.namespace" . }}.svc.cluster.local:{{ .Values.broker.container.port }}"
        volumeMounts:
        - name: bpffs
          mountPath: /sys/fs/bpf
        - name: run-containerd-bundle
          mountPath: /run/containerd/io.containerd.runtime.v2.task
        - name: containerd-sock
          mountPath: /run/containerd/containerd.sock
          readOnly: true
        - mountPath: /proc
          name: hostproc
         {{- with .Values.broker.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      serviceAccountName: {{ default "controller" .Values.controller.serviceAccount.name }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.priorityClassName }}
      priorityClassName: {{ .Values.controller.priorityClassName | quote }}
      {{- end }}
      volumes:
      - name: bpffs
        hostPath:
          path: /sys/fs/bpf
          type: Directory
      - name: run-containerd-bundle
        hostPath:
          path: /run/containerd/io.containerd.runtime.v2.task
      - name: containerd-sock
        hostPath:
          path: /run/containerd/containerd.sock
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.controller.nodeSelector }}
{{- toYaml .Values.controller.nodeSelector | nindent 8 }}
{{- end }}
